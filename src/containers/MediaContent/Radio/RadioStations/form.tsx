import * as React from "react";
import { FormProps } from "../../../../types";
import { FormSection } from "../../../../components/FormSection";
import { FormTabs } from "../../../../components/Tabs/form-tabs";
import {
  ArrayInputNoDrag,
  AutocompleteArrayInput,
  NumberInput,
  requiredValidate,
  RichTextInput,
  TextInput,
} from "../../../../components/Inputs";
import { MetaData } from "../../../../components/Models/Metadata";
import { PUBLISHED_CHOICES_FORM, SELECT_MARKERS } from "../../../../constants/forms-constants";
import { ReferenceArrayInput } from "../../../../components/Inputs/ReferenceInputs/reference-array-input";
import { ScrollTopButton } from "../../../../components/UI/Buttons/scroll-top-button";
import { RadioButtonGroupInput } from "../../../../components/Inputs/RadioButtonGroupInput";

const INPUT_ITEMS_PER_PAGE = 25;
const FIXED_TAB_LABELS = ["Attributes", "Images", "Source", "Terms of publication"];

export const Form: React.FC<FormProps> = ({ type, resource }) => {
  return (
    <>
      <FormTabs labels={FIXED_TAB_LABELS} />
      <FormSection
        text="Attributes are used to visually represent the movie in the app and help the user make a choice.
          The more detailed the section is, the higher the probability of the movie getting into the search results and filtering in the application."
        title="Attributes"
        id="Attributes"
        formType={type}
      >
        <TextInput
          resource={resource}
          validate={requiredValidate}
          inputType={type}
          label="Name"
          source="name"
          placeholder="name"
          fullWidth
          helperText={
            "The name of the radio station that users will see in any sections of the application"
          }
        />
        <RichTextInput
          resource={resource}
          inputType={type}
          label="Description"
          source="description"
        />
        <ReferenceArrayInput
          label="Genres"
          source="genreIds"
          reference="genres"
          resource={resource}
          perPage={INPUT_ITEMS_PER_PAGE}
        >
          <AutocompleteArrayInput
            optionText="name"
            optionValue="id"
            resource={resource}
            inputType={type}
            helperText="You can select several genres from the list"
          />
        </ReferenceArrayInput>
        <AutocompleteArrayInput
          source="markers"
          label="Label"
          inputType={type}
          choices={SELECT_MARKERS}
          helperText="The element that is displayed on top of the movie card in the application. If the film is to be released, the label will be ignored."
        />
        <NumberInput
          source="position"
          label="Position"
          resource={resource}
          inputType={type}
          helperText="The serial number in the general list of films. Can be entered manually when creating or editing, the positions of the remaining films will be updated accordingly. If the field is left empty, the last sequential number will be assigned to the movie."
        />
        <ArrayInputNoDrag
          resource={resource}
          inputType={type}
          helperText={
            "A pair of custom fields that can be used for filtering. You can add multiple pairs."
          }
          ChildComponent={MetaData}
          source="metadata"
          label="Metadata"
          groupInputs
          switchable
          fullWidth
        />
      </FormSection>
      <FormSection
        text="A video file, audio file, radio stream or TV stream available for broadcast to the user in the application on the media content page. To add a source to the media content, it must be successfully transcoded."
        title="Source"
        formType={type}
        id="Source"
      ></FormSection>
      <FormSection
        id="Terms of publication"
        text="Configuration of the rule for publishing a movie. The rule will be automatically generated by the publishing system within one hour after saving. The generated rule will appear on the movie page in the current section."
        title="Terms of publication"
        formType={type}
      >
        <RadioButtonGroupInput
          source="published"
          label="Publishing"
          initialValue={false}
          inputType={type}
          choices={PUBLISHED_CHOICES_FORM}
        />
      </FormSection>
      <ScrollTopButton />
    </>
  );
};
